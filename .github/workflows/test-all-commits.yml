name: Quick Test on All Commits

on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ '*' ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Type check
        run: npm run type-check
        
      - name: Run unit tests with coverage
        run: npm run test:ci
        
      - name: Build project
        run: npm run build
        
      - name: Upload coverage reports
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report-${{ github.sha }}
          path: coverage/
          
      - name: Test summary
        if: always()
        run: |
          echo "## Test Results ðŸ“Š" >> $GITHUB_STEP_SUMMARY
          echo "- âœ… Type checking completed" >> $GITHUB_STEP_SUMMARY
          echo "- âœ… Unit tests executed" >> $GITHUB_STEP_SUMMARY
          echo "- âœ… Build successful" >> $GITHUB_STEP_SUMMARY
          
  integration-test:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' || github.event_name == 'pull_request'
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: shielddesk_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Setup test database
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/shielddesk_test
        run: npm run db:push
        
      - name: Run integration tests
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/shielddesk_test
        run: npm run test:integration
        
      - name: Run E2E tests
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/shielddesk_test
        run: npm run test:e2e
        
      - name: Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-artifacts-${{ github.sha }}
          path: |
            test-results/
            playwright-report/