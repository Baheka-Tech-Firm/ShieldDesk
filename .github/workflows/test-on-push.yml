name: Test on Push

on:
  push:
    branches:
      - '*'
    paths:
      - 'client/**'
      - 'server/**'
      - 'shared/**'
      - 'tests/**'
      - 'package.json'
      - 'package-lock.json'
      - 'jest.config.js'
      - 'playwright.config.ts'

jobs:
  quick-test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Lint code
        run: npm run lint || echo "Linting completed with warnings"
        
      - name: Type check
        run: npx tsc --noEmit
        
      - name: Run unit tests
        run: npm run test:ci
        
      - name: Build project
        run: npm run build
        
      - name: Quick smoke test
        run: |
          timeout 30s npm start &
          sleep 10
          curl -f http://localhost:5000/api/health || echo "Server health check failed"
          pkill -f "npm start" || true

  integration-test:
    runs-on: ubuntu-latest
    needs: quick-test
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: shielddesk_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Setup test database
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/shielddesk_test
        run: |
          npm run db:push
          
      - name: Run integration tests
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/shielddesk_test
        run: npm run test:integration
        
      - name: Run E2E tests
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/shielddesk_test
        run: npm run test:e2e
        
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: |
            test-results/
            coverage/
            playwright-report/

  security-scan:
    runs-on: ubuntu-latest
    needs: quick-test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run security audit
        run: npm audit --audit-level moderate
        
      - name: Check for vulnerabilities
        run: |
          npx audit-ci --config .audit-ci.json || echo "Security scan completed with warnings"
          
      - name: Run dependency check
        run: |
          npx license-checker --summary || echo "License check completed"